"""empty message

Revision ID: 2ebe713456f4
Revises: 
Create Date: 2025-01-07 15:46:43.934871

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2ebe713456f4'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Case_Type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Certificates',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Chipsets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('FormFactors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('GPU_Memory_Types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('M2_Sizes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Manufacturers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Materials',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('material', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Memory_Sizes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RAM_Quantities',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('ram_number', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Ram_Type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Sockets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('surname', sa.String(length=255), nullable=True),
    sa.Column('patronymic', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('login')
    )
    op.create_table('Vent_Size',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CPU_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('core_count', sa.Integer(), nullable=False),
    sa.Column('flow_count', sa.Integer(), nullable=False),
    sa.Column('cache', sa.Integer(), nullable=False),
    sa.Column('tdp', sa.Integer(), nullable=False),
    sa.Column('socket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['socket_id'], ['Sockets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Coolers_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('base_material_id', sa.Integer(), nullable=False),
    sa.Column('radiator_material_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['base_material_id'], ['Materials.id'], ),
    sa.ForeignKeyConstraint(['radiator_material_id'], ['Materials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('GPU_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('amount_video_memory', sa.Integer(), nullable=False),
    sa.Column('video_memory_type', sa.Integer(), nullable=False),
    sa.Column('tdp', sa.Integer(), nullable=False),
    sa.Column('RTX_Rays', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['video_memory_type'], ['GPU_Memory_Types.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('HDD_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.Column('tdp', sa.Integer(), nullable=False),
    sa.Column('speed_read', sa.Integer(), nullable=False),
    sa.Column('write_read', sa.Integer(), nullable=False),
    sa.Column('memory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['Memory_Sizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('M2_SSD_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.Column('tdp', sa.Integer(), nullable=False),
    sa.Column('speed_read', sa.Integer(), nullable=False),
    sa.Column('write_read', sa.Integer(), nullable=False),
    sa.Column('memory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['Memory_Sizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Motherboards_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('form', sa.Integer(), nullable=False),
    sa.Column('chipset', sa.Integer(), nullable=False),
    sa.Column('socket', sa.Integer(), nullable=False),
    sa.Column('USB_Count', sa.Integer(), nullable=False),
    sa.Column('SATA_Count', sa.Integer(), nullable=False),
    sa.Column('HDMI_Count', sa.Integer(), nullable=False),
    sa.Column('DisplayPort_Count', sa.Integer(), nullable=False),
    sa.Column('DVI_Count', sa.Integer(), nullable=False),
    sa.Column('VGA_Count', sa.Integer(), nullable=False),
    sa.Column('RAM_Count', sa.Integer(), nullable=False),
    sa.Column('RAM_Type_id', sa.Integer(), nullable=False),
    sa.Column('M2_Slot', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['M2_Slot'], ['M2_Sizes.id'], ),
    sa.ForeignKeyConstraint(['RAM_Type_id'], ['Ram_Type.id'], ),
    sa.ForeignKeyConstraint(['chipset'], ['Chipsets.id'], ),
    sa.ForeignKeyConstraint(['form'], ['FormFactors.id'], ),
    sa.ForeignKeyConstraint(['socket'], ['Sockets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Orders',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['Categories.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PC_Case_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('weight', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('height', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('wight', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('case_type', sa.Integer(), nullable=False),
    sa.Column('front_vents_count', sa.Integer(), nullable=False),
    sa.Column('rear_vents_count', sa.Integer(), nullable=False),
    sa.Column('vent_size', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['case_type'], ['Case_Type.id'], ),
    sa.ForeignKeyConstraint(['vent_size'], ['Vent_Size.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Power_Units',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('power', sa.Integer(), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('certificate_id', sa.Integer(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['certificate_id'], ['Certificates.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RAM_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.Column('type_id', sa.Integer(), nullable=False),
    sa.Column('radiators', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['type_id'], ['Ram_Type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SSD_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.Integer(), nullable=False),
    sa.Column('tdp', sa.Integer(), nullable=False),
    sa.Column('speed_read', sa.Integer(), nullable=False),
    sa.Column('write_read', sa.Integer(), nullable=False),
    sa.Column('memory_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['memory_id'], ['Memory_Sizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Vents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('CPU',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('cpu_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cpu_specs_id'], ['CPU_Specs.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Coolers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cooler_specs_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['cooler_specs_id'], ['Coolers_Specs.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('GPU',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('gpu_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gpu_specs_id'], ['GPU_Specs.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('HDDs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('hdd_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['hdd_specs_id'], ['HDD_Specs.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('M2_SSDs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('m2_ssd_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['m2_ssd_specs_id'], ['M2_SSD_Specs.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.ForeignKeyConstraint(['size'], ['M2_Sizes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Motherboards',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=90), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('motherboard_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.ForeignKeyConstraint(['motherboard_specs_id'], ['Motherboards_Specs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('PC_Cases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('pc_case_specs_id', sa.Integer(), nullable=False),
    sa.Column('form_factor_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['form_factor_id'], ['FormFactors.id'], ),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.ForeignKeyConstraint(['pc_case_specs_id'], ['PC_Case_Specs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('RAM',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('ram_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.ForeignKeyConstraint(['ram_specs_id'], ['RAM_Specs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SSDs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('manufacturer_id', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.Column('ssd_specs_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['manufacturer_id'], ['Manufacturers.id'], ),
    sa.ForeignKeyConstraint(['ssd_specs_id'], ['SSD_Specs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Vents_Specs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vent_id', sa.Integer(), nullable=False),
    sa.Column('max_speed_rotation', sa.Integer(), nullable=False),
    sa.Column('min_speed_rotation', sa.Integer(), nullable=False),
    sa.Column('max_level_noise', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.ForeignKeyConstraint(['vent_id'], ['Vents.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Basket',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('cpu_id', sa.Integer(), nullable=True),
    sa.Column('gpu_id', sa.Integer(), nullable=True),
    sa.Column('ram_id', sa.Integer(), nullable=True),
    sa.Column('motherboard_id', sa.Integer(), nullable=True),
    sa.Column('m2_id', sa.Integer(), nullable=True),
    sa.Column('ssd_id', sa.Integer(), nullable=True),
    sa.Column('hdd_id', sa.Integer(), nullable=True),
    sa.Column('case_id', sa.Integer(), nullable=True),
    sa.Column('cooler_id', sa.Integer(), nullable=True),
    sa.Column('pu_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['case_id'], ['PC_Cases.id'], ),
    sa.ForeignKeyConstraint(['cooler_id'], ['Coolers.id'], ),
    sa.ForeignKeyConstraint(['cpu_id'], ['CPU.id'], ),
    sa.ForeignKeyConstraint(['gpu_id'], ['GPU.id'], ),
    sa.ForeignKeyConstraint(['hdd_id'], ['HDDs.id'], ),
    sa.ForeignKeyConstraint(['m2_id'], ['M2_SSDs.id'], ),
    sa.ForeignKeyConstraint(['motherboard_id'], ['Motherboards.id'], ),
    sa.ForeignKeyConstraint(['pu_id'], ['Power_Units.id'], ),
    sa.ForeignKeyConstraint(['ram_id'], ['RAM.id'], ),
    sa.ForeignKeyConstraint(['ssd_id'], ['SSDs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Coolers_Sockets',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cooler_id', sa.Integer(), nullable=False),
    sa.Column('socket_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cooler_id'], ['Coolers.id'], ),
    sa.ForeignKeyConstraint(['socket_id'], ['Sockets.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('cost', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('article', sa.String(length=50), nullable=False),
    sa.Column('cpu_id', sa.Integer(), nullable=False),
    sa.Column('gpu_id', sa.Integer(), nullable=False),
    sa.Column('ram_id', sa.Integer(), nullable=False),
    sa.Column('ram_quantitiy_id', sa.Integer(), nullable=False),
    sa.Column('motherboard_id', sa.Integer(), nullable=False),
    sa.Column('m2_id', sa.Integer(), nullable=True),
    sa.Column('ssd_id', sa.Integer(), nullable=True),
    sa.Column('hdd_id', sa.Integer(), nullable=True),
    sa.Column('case_id', sa.Integer(), nullable=False),
    sa.Column('cooler_id', sa.Integer(), nullable=False),
    sa.Column('pu_id', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['case_id'], ['PC_Cases.id'], ),
    sa.ForeignKeyConstraint(['cooler_id'], ['Coolers.id'], ),
    sa.ForeignKeyConstraint(['cpu_id'], ['CPU.id'], ),
    sa.ForeignKeyConstraint(['gpu_id'], ['GPU.id'], ),
    sa.ForeignKeyConstraint(['hdd_id'], ['HDDs.id'], ),
    sa.ForeignKeyConstraint(['m2_id'], ['M2_SSDs.id'], ),
    sa.ForeignKeyConstraint(['motherboard_id'], ['Motherboards.id'], ),
    sa.ForeignKeyConstraint(['pu_id'], ['Power_Units.id'], ),
    sa.ForeignKeyConstraint(['ram_id'], ['RAM.id'], ),
    sa.ForeignKeyConstraint(['ram_quantitiy_id'], ['RAM_Quantities.id'], ),
    sa.ForeignKeyConstraint(['ssd_id'], ['SSDs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Products')
    op.drop_table('Coolers_Sockets')
    op.drop_table('Basket')
    op.drop_table('Vents_Specs')
    op.drop_table('SSDs')
    op.drop_table('RAM')
    op.drop_table('PC_Cases')
    op.drop_table('Motherboards')
    op.drop_table('M2_SSDs')
    op.drop_table('HDDs')
    op.drop_table('GPU')
    op.drop_table('Coolers')
    op.drop_table('CPU')
    op.drop_table('Vents')
    op.drop_table('SSD_Specs')
    op.drop_table('RAM_Specs')
    op.drop_table('Power_Units')
    op.drop_table('PC_Case_Specs')
    op.drop_table('Orders')
    op.drop_table('Motherboards_Specs')
    op.drop_table('M2_SSD_Specs')
    op.drop_table('HDD_Specs')
    op.drop_table('GPU_Specs')
    op.drop_table('Coolers_Specs')
    op.drop_table('CPU_Specs')
    op.drop_table('Vent_Size')
    op.drop_table('Users')
    op.drop_table('Sockets')
    op.drop_table('Ram_Type')
    op.drop_table('RAM_Quantities')
    op.drop_table('Memory_Sizes')
    op.drop_table('Materials')
    op.drop_table('Manufacturers')
    op.drop_table('M2_Sizes')
    op.drop_table('GPU_Memory_Types')
    op.drop_table('FormFactors')
    op.drop_table('Chipsets')
    op.drop_table('Certificates')
    op.drop_table('Categories')
    op.drop_table('Case_Type')
    # ### end Alembic commands ###
